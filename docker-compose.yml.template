version: '3'

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  nginx-data: {}  

services:
# Security
  nginx:
    image: nginx:latest
    container_name: "nginx"
    ports:
#      - "80:80"
      - "443:443"
    depends_on:
      - broker
      - metabase
      - trinocoordinator
    volumes:
      - nginx-data:/data
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/certs/:/etc/letsencrypt
# Trino
  trinocoordinator:
    image: "lewuathe/trino-coordinator:354"
    depends_on:
      - broker
    ports:
      - "8080:8080"
    container_name: "trino_coordinator"
    command: http://trinocoordinator:8080 coordinator
    volumes:
      - ./config/trino:/usr/local/trino/etc  

  worker:
    image: "lewuathe/trino-worker:354"
    depends_on:
      - trinocoordinator
    container_name: "worker0"
    ports:
      - "8781"
    command: http://trinocoordinator:8080 worker0

# Metabase
  metabase:
    image: "metabase/metabase:latest"
    ports:
      - "3000"
    container_name: "metabase"
    volumes:
      - ./data/metabase:/tmp
      - ./config/metabase/log4j2.xml:/tmp/log4j2.xml
    environment:
      - MB_DB_FILE=/tmp/metabase.db
      - MB_EMOJI_IN_LOGS=false
      - JAVA_OPTS=-Dlog4j.configurationFile=file:///tmp/log4j2.xml
    depends_on:
      - trinocoordinator

# Druid
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${ODISS_POSTGRES_PASSWORD}
      - POSTGRES_USER=${ODISS_POSTGRES_USER}
      - POSTGRES_DB=druid

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.7.0
    ports:
      - "2181"
    environment:
      - SERVER_JVMFLAGS=-Djava.security.auth.login.config=/etc/zookeeper/conf/zookeeper_jaas.conf
      - KAFKA_OPTS=-Djava.security.auth.login.config=/etc/zookeeper/conf/kafka_jaas.conf
    volumes:
      - ./config/zookeeper/zoo.cfg:/conf/zoo.cfg
      - ./config/zookeeper/zookeeper_jaas.conf:/etc/zookeeper/conf/zookeeper_jaas.conf
      - ./config/kafka/kafka_jaas.conf:/etc/zookeeper/conf/kafka_jaas.conf

  coordinator:
    image: apache/druid:0.22.1
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081"
    command:
      - coordinator
    env_file:
      - ./config/druid/environment

  broker:
    image: apache/druid:0.22.1
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082"
    command:
      - broker
    env_file:
      - ./config/druid/environment

  historical:
    image: apache/druid:0.22.1
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083"
    command:
      - historical
    env_file:
      - ./config/druid/environment

  middlemanager:
    image: apache/druid:0.22.1
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091"
      - "8100-8105"
    command:
      - middleManager
    env_file:
      - ./config/druid/environment

  router:
    image: apache/druid:0.22.1
    container_name: router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888"
    command:
      - router
    env_file:
      - ./config/druid/environment

# Kafka
  kafka:
    image: 'bitnami/kafka:3.1.0'
    container_name: "kafka"
    ports:
      - '9093:9093'
    environment:
      - BITNAMI_DEBUG=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_OPTS=-Djava.security.auth.login.config=/opt/bitnami/kafka/config/kafka_jaas.conf
    depends_on:
      - zookeeper
    volumes:
      - ./config/kafka/certs/:/opt/bitnami/kafka/config/certs/
      - ./config/kafka/server.properties:/bitnami/kafka/config/server.properties
      - ./config/kafka/kafka_jaas.conf:/opt/bitnami/kafka/config/kafka_jaas.conf
      - ./config/kafka/log4j.properties:/bitnami/kafka/config/log4j.properties
