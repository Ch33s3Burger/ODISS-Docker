version: '3'

volumes:
  metadata_data: {}
  middle_var: {}
  historical_var: {}
  broker_var: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  nginx-data: {}

services:
# Security
  nginx:
    image: nginx:latest
    container_name: "nginx"
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - broker
      - metabase
      - trinocoordinator
    volumes:
      - nginx-data:/data
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs/:/etc/letsencrypt
# Trino
  trinocoordinator:
    image: "lewuathe/trino-coordinator:354"
    depends_on:
      - broker
    ports:
      - "8080:8080"
    container_name: "trino_coordinator"
    command: http://trinocoordinator:8080 coordinator
    volumes:
      - ./trino:/usr/local/trino/etc            

  worker0:
    image: "lewuathe/trino-worker:354"
    depends_on:
      - trinocoordinator
    container_name: "worker0"
    ports:
      - "8781"
    command: http://trinocoordinator:8080 worker0

  worker1:
    image: "lewuathe/trino-worker:354"
    depends_on:
      - trinocoordinator
    container_name: "worker1"
    ports:
      - "8782"
    command: http://trinocoordinator:8080 worker1

# Metabase
  metabase:
    image: "metabase/metabase:latest"
    ports:
      - "3000"
    container_name: "metabase"
    volumes:
      - ./metabase:/tmp
    environment:
      - MB_DB_FILE=/tmp/metabase.db
    depends_on:
      - trinocoordinator

# Druid
  postgres:
    container_name: postgres
    image: postgres:latest
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    ports:
      - "2181"
    environment:
      - ZOOKEEPER_SASL_ENABLED=true
      - ZOO_ENABLE_AUTH=yes
      - ZOO_SERVER_USERS=kafka,druid
      - ZOO_SERVER_PASSWORDS=kafka_password,druid_password
      - ZOO_CLIENT_USER=zookeeper
      - ZOO_CLIENT_PASSWORD=zookeeper_password

      - BITNAMI_DEBUG=true

  coordinator:
    image: apache/druid:0.22.1
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
    ports:
      - "8081"
    command:
      - coordinator
    env_file:
      - environment

  broker:
    image: apache/druid:0.22.1
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082"
    command:
      - broker
    env_file:
      - environment

  historical:
    image: apache/druid:0.22.1
    container_name: historical
    volumes:
      - druid_shared:/opt/shared
      - historical_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083"
    command:
      - historical
    env_file:
      - environment

  middlemanager:
    image: apache/druid:0.22.1
    container_name: middlemanager
    volumes:
      - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091"
      - "8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  router:
    image: apache/druid:0.22.1
    container_name: router
    volumes:
      - router_var:/opt/druid/var
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888"
    command:
      - router
    env_file:
      - environment

# Kafka
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: "kafka"
    ports:
      - '9093:9093'
    environment:
      - KAFKA_BROKER_ID=11
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181

      # Security
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,CLIENT:SSL
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,CLIENT://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,CLIENT://kafka:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL

      - KAFKA_CLIENT_USER=user
      - KAFKA_CLIENT_PASSWORD=password

      - KAFKA_CERTIFICATE_PASSWORD=Lichtschwert123#
      - KAFKA_TLS_TYPE=JKS # or PEM

      - ALLOW_PLAINTEXT_LISTENER=no

      - KAFKA_CFG_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=     

      # Zookeeper auth
      - KAFKA_ZOOKEEPER_PROTOCOL=SASL
      - KAFKA_ZOOKEEPER_USER=kafka
      - KAFKA_ZOOKEEPER_PASSWORD=kafka_password

      # Logging
      - BITNAMI_DEBUG=true
    depends_on:
      - zookeeper
    volumes:
      - ./keystore/kafka.keystore.jks:/opt/bitnami/kafka/config/certs/kafka.keystore.jks
      - ./truststore/kafka.truststore.jks:/opt/bitnami/kafka/config/certs/kafka.truststore.jks
