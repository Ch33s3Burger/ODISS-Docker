#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Extensions specified in the load list will be loaded by Druid
# We are using local fs for deep storage - not recommended for production - use S3, HDFS, or NFS instead
# We are using local derby for the metadata store - not recommended for production - use MySQL or Postgres instead

# If you specify `druid.extensions.loadList=[]`, Druid won't load any extension from file system.
# If you don't specify `druid.extensions.loadList`, Druid will load all the extensions under root extension directory.
# More info: https://druid.apache.org/docs/latest/operations/including-extensions.html
druid_extensions_loadList=["druid-hdfs-storage", "druid-kafka-indexing-service", "druid-datasketches", "druid-basic-security", "postgresql-metadata-storage"]

# If you have a different version of Hadoop, place your Hadoop client jar files in your hadoop-dependencies directory
# and uncomment the line below to point to your directory.
#druid.extensions.hadoopDependenciesDir=/my/dir/hadoop-dependencies

druid_javascript_enabled=true

#
# Logging
#

# Log all runtime properties on startup. Disable to avoid logging properties on startup:
druid_startup_logging_logProperties=true

#
# Zookeeper
#

druid_zk_service_host=zookeeper
druid_zk_service_user=${ODISS_DRUID_ZOOKEEPER_SERVER_USERNAME}
druid_zk_service_pwd=${ODISS_DRUID_ZOOKEEPER_SERVER_PASSWORD}

#
# PostgreSQL Metadata storage
#

druid_metadata_storage_host=
druid_metadata_storage_type=postgresql
druid_metadata_storage_connector_connectURI=jdbc:postgresql://postgres:5432/druid
druid_metadata_storage_connector_user=${ODISS_POSTGRES_USER}
druid_metadata_storage_connector_password=${ODISS_POSTGRES_PASSWORD}

#
# Deep storage
#

# For local disk (only viable in a cluster if this is a network mount):
druid_storage_type=local
druid_storage_storageDirectory=/opt/shared/segments

#
# Indexing service logs
#

# For local disk (only viable in a cluster if this is a network mount):
druid_indexer_logs_type=file
druid_indexer_logs_directory=/opt/shared/indexing-logs

#
# Monitoring
#

druid_monitoring_monitors=["org.apache.druid.java.util.metrics.JvmMonitor"]
druid_emitter=noop
druid_emitter_logging_logLevel=${ODISS_DRUID_LOG_LEVEL}

#
# Logging
#

DRUID_LOG_LEVEL=${ODISS_DRUID_LOG_LEVEL}

# Storage type of double columns
druid_indexing_doubleStorage=double

#
# Security
#
#druid_server_hiddenProperties=["druid.s3.accessKey","druid.s3.secretKey","druid.metadata.storage.connector.password"]


#
# SQL
#
druid_sql_enable=true

#
# Lookups
#
druid_lookup_enableLookupSyncOnStartup=false

#
# Authentication
#
druid_auth_authenticatorChain=["MyBasicMetadataAuthenticator"]
druid_auth_authenticator_MyBasicMetadataAuthenticator_type=basic
druid_auth_authenticator_MyBasicMetadataAuthenticator_initialAdminPassword=${ODISS_DRUID_ADMIN_PASSWORD}
druid_auth_authenticator_MyBasicMetadataAuthenticator_initialInternalClientPassword=${ODISS_DRUID_DRUID_SYSTEM_PASSWORD}
druid_auth_authenticator_MyBasicMetadataAuthenticator_credentialsValidator_type=metadata
druid_auth_authenticator_MyBasicMetadataAuthenticator_skipOnFailure=false
druid_auth_authenticator_MyBasicMetadataAuthenticator_authorizerName=MyBasicMetadataAuthorizer

# Escalator
druid_escalator_type=basic
druid_escalator_internalClientUsername=${ODISS_DRUID_INTERNAL_CLIENT_USERNAME}
druid_escalator_internalClientPassword=${ODISS_DRUID_INTERNAL_CLIENT_PASSWORD}
druid_escalator_authorizerName=MyBasicMetadataAuthorizer

# Authorizer
druid_auth_authorizers=["MyBasicMetadataAuthorizer"]
druid_auth_authorizer_MyBasicMetadataAuthorizer_type=basic
